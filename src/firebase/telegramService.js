import { doc, getDoc, setDoc, collection } from 'firebase/firestore';
import { db } from './config';

// –ö–æ–ª–ª–µ–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
const settingsCollection = collection(db, 'settings');
// –î–æ–∫—É–º–µ–Ω—Ç —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Telegram
const telegramConfigDoc = doc(settingsCollection, 'telegramConfig');

// –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Telegram
export const getTelegramConfig = async () => {
  try {
    const docSnap = await getDoc(telegramConfigDoc);
    
    if (docSnap.exists()) {
      return docSnap.data();
    } else {
      // –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      const defaultConfig = {
        botToken: '7836895913:AAGbj_E6i3AqXi7Sh2bDxn8WI0LRE7hNGBo',
        channelId: '',
        enabled: false
      };
      
      await setDoc(telegramConfigDoc, defaultConfig);
      return defaultConfig;
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Telegram:', error);
    throw error;
  }
};

// –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Telegram
export const updateTelegramConfig = async (configData) => {
  try {
    await setDoc(telegramConfigDoc, configData);
    return configData;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Telegram:', error);
    throw error;
  }
};

// –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –∫–∞–Ω–∞–ª
export const sendTelegramMessage = async (message) => {
  try {
    const config = await getTelegramConfig();
    
    if (!config.enabled || !config.botToken || !config.channelId) {
      console.warn('Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ –∏–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
      return false;
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram Bot API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    const url = `https://api.telegram.org/bot${config.botToken}/sendMessage`;
    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: config.channelId,
        text: message,
        parse_mode: 'HTML'
      }),
    });
    
    const data = await response.json();
    
    if (!data.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ Telegram API: ${data.description}`);
    }
    
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:', error);
    throw error;
  }
};

// –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –ª—É—á—à–µ–º –ø—Ä–æ–º–æ—É—Ç–µ—Ä–µ
export const sendTopPromoterMessage = async (promoter) => {
  if (!promoter) return false;
  
  const message = `
üèÜ <b>–õ—É—á—à–∏–π –ø—Ä–æ–º–æ—É—Ç–µ—Ä –º–µ—Å—è—Ü–∞!</b> üèÜ

–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º <b>${promoter.name}</b> —Å –ø–æ–±–µ–¥–æ–π!
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑–Ω–µ—Å–µ–Ω–Ω—ã—Ö –ª–∏—Å—Ç–æ–≤–æ–∫: <b>${promoter.leafletsCount}</b>
–ù–∞–≥—Ä–∞–¥–∞: <b>${promoter.reward}</b>

üéâ –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! üéâ
  `;
  
  return sendTelegramMessage(message);
};

/*
–ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ù–ê–°–¢–†–û–ô–ö–ï TELEGRAM –ë–û–¢–ê:

1. –ë–æ—Ç —É–∂–µ —Å–æ–∑–¥–∞–Ω, —Ç–æ–∫–µ–Ω: 7836895913:AAGbj_E6i3AqXi7Sh2bDxn8WI0LRE7hNGBo
2. –°–æ–∑–¥–∞–π—Ç–µ –∫–∞–Ω–∞–ª –≤ Telegram –∏ –¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
3. –ü–æ–ª—É—á–∏—Ç–µ ID –∫–∞–Ω–∞–ª–∞ (channelId) - –æ–±—ã—á–Ω–æ —ç—Ç–æ @–∏–º—è_–∫–∞–Ω–∞–ª–∞ –∏–ª–∏ —á–∏—Å–ª–æ–≤–æ–π ID
4. –í–∫–ª—é—á–∏—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ (enabled: true)
5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É, –æ—Ç–ø—Ä–∞–≤–∏–≤ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
*/ 