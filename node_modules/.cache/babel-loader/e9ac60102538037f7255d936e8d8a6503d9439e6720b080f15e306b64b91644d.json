{"ast":null,"code":"import{collection,doc,getDocs,getDoc,addDoc,updateDoc,deleteDoc,query,orderBy,limit,serverTimestamp,setDoc}from'firebase/firestore';import{db}from'./config';// Коллекция промоутеров\nconst promotersCollection=collection(db,'promoters');// Коллекция настроек\nconst settingsCollection=collection(db,'settings');const topPromoterDoc=doc(settingsCollection,'topPromoter');const settingsDoc=doc(settingsCollection,'general');// Функция для генерации URL аватара на основе имени\nconst generateAvatarUrl=name=>{// Используем сервис UI Avatars для генерации аватара по имени\nconst encodedName=encodeURIComponent(name);return`https://ui-avatars.com/api/?name=${encodedName}&background=random&color=fff&size=128`;};// Получить всех промоутеров, отсортированных по количеству листовок (по убыванию)\nexport const getPromoters=async()=>{try{const q=query(promotersCollection,orderBy('leafletsCount','desc'));const querySnapshot=await getDocs(q);return querySnapshot.docs.map(doc=>({id:doc.id,...doc.data()}));}catch(error){console.error('Ошибка при получении промоутеров:',error);throw error;}};// Получить топ N промоутеров\nexport const getTopPromoters=async function(){let topCount=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;try{const q=query(promotersCollection,orderBy('leafletsCount','desc'),limit(topCount));const querySnapshot=await getDocs(q);return querySnapshot.docs.map(doc=>({id:doc.id,...doc.data()}));}catch(error){console.error('Ошибка при получении топ промоутеров:',error);throw error;}};// Получить промоутера по ID\nexport const getPromoterById=async id=>{try{const docRef=doc(db,'promoters',id);const docSnap=await getDoc(docRef);if(docSnap.exists()){return{id:docSnap.id,...docSnap.data()};}else{return null;}}catch(error){console.error('Ошибка при получении промоутера:',error);throw error;}};// Добавить нового промоутера\nexport const addPromoter=async(promoterData,avatarFile)=>{try{// Вместо загрузки файла используем генерацию аватара по имени\n// или URL, если он предоставлен в promoterData.avatarUrl\nlet avatarUrl=promoterData.avatarUrl||'';if(!avatarUrl&&promoterData.name){avatarUrl=generateAvatarUrl(promoterData.name);}// Создаем документ промоутера\nconst newPromoter={name:promoterData.name,avatarUrl,leafletsCount:Number(promoterData.leafletsCount)||0,workDays:Number(promoterData.workDays)||0,district:promoterData.district||'',createdAt:serverTimestamp(),updatedAt:serverTimestamp()};// Рассчитываем скорость только если есть дни работы\nif(newPromoter.workDays>0){newPromoter.speed=Math.round(newPromoter.leafletsCount/newPromoter.workDays);}else{newPromoter.speed=0;}const docRef=await addDoc(promotersCollection,newPromoter);return{id:docRef.id,...newPromoter};}catch(error){console.error('Ошибка при добавлении промоутера:',error);throw error;}};// Обновить данные промоутера\nexport const updatePromoter=async(id,data)=>{try{const promoterRef=doc(db,'promoters',id);await updateDoc(promoterRef,{...data,updatedAt:serverTimestamp()});}catch(error){console.error('Ошибка при обновлении промоутера:',error);throw error;}};// Удалить промоутера\nexport const deletePromoter=async id=>{try{const promoterRef=doc(db,'promoters',id);const promoterSnap=await getDoc(promoterRef);if(!promoterSnap.exists()){throw new Error('Промоутер не найден');}// Удаляем документ\nawait deleteDoc(promoterRef);return id;}catch(error){console.error('Ошибка при удалении промоутера:',error);throw error;}};// Получить данные о лучшем промоутере месяца\nexport const getTopPromoter=async()=>{try{const docSnap=await getDoc(topPromoterDoc);if(docSnap.exists()){return docSnap.data();}else{return null;}}catch(error){console.error('Ошибка при получении лучшего промоутера:',error);throw error;}};// Установить лучшего промоутера месяца\nexport const setTopPromoter=async topPromoterData=>{try{// Если нет URL аватара, но есть имя, генерируем аватар\nif(!topPromoterData.avatarUrl&&topPromoterData.name){topPromoterData.avatarUrl=generateAvatarUrl(topPromoterData.name);}await setDoc(topPromoterDoc,{...topPromoterData,date:serverTimestamp()});return topPromoterData;}catch(error){console.error('Ошибка при установке лучшего промоутера:',error);throw error;}};// Получить настройки сайта\nexport const getSettings=async()=>{try{const docSnap=await getDoc(settingsDoc);if(docSnap.exists()){return docSnap.data();}else{// Создаем документ с настройками по умолчанию, если его нет\nconst defaultSettings={companyLogo:'https://via.placeholder.com/200x60?text=Logo',headerText:'Конкурс для лучших! Стань топ-промоутером Петрозаводска!',telegramChannel:'',managerContacts:[]};await setDoc(settingsDoc,defaultSettings);return defaultSettings;}}catch(error){console.error('Ошибка при получении настроек:',error);throw error;}};// Обновить настройки сайта\nexport const updateSettings=async(settingsData,logoFile)=>{try{// Используем URL логотипа из settingsData или оставляем текущий\nconst updatedSettings={...settingsData};await setDoc(settingsDoc,updatedSettings);return updatedSettings;}catch(error){console.error('Ошибка при обновлении настроек:',error);throw error;}};","map":{"version":3,"names":["collection","doc","getDocs","getDoc","addDoc","updateDoc","deleteDoc","query","orderBy","limit","serverTimestamp","setDoc","db","promotersCollection","settingsCollection","topPromoterDoc","settingsDoc","generateAvatarUrl","name","encodedName","encodeURIComponent","getPromoters","q","querySnapshot","docs","map","id","data","error","console","getTopPromoters","topCount","arguments","length","undefined","getPromoterById","docRef","docSnap","exists","addPromoter","promoterData","avatarFile","avatarUrl","newPromoter","leafletsCount","Number","workDays","district","createdAt","updatedAt","speed","Math","round","updatePromoter","promoterRef","deletePromoter","promoterSnap","Error","getTopPromoter","setTopPromoter","topPromoterData","date","getSettings","defaultSettings","companyLogo","headerText","telegramChannel","managerContacts","updateSettings","settingsData","logoFile","updatedSettings"],"sources":["D:/проекты/Promo rating/src/firebase/promoterService.js"],"sourcesContent":["import { \r\n  collection, \r\n  doc, \r\n  getDocs, \r\n  getDoc, \r\n  addDoc, \r\n  updateDoc, \r\n  deleteDoc, \r\n  query, \r\n  orderBy, \r\n  limit, \r\n  serverTimestamp,\r\n  setDoc\r\n} from 'firebase/firestore';\r\nimport { db } from './config';\r\n\r\n// Коллекция промоутеров\r\nconst promotersCollection = collection(db, 'promoters');\r\n// Коллекция настроек\r\nconst settingsCollection = collection(db, 'settings');\r\nconst topPromoterDoc = doc(settingsCollection, 'topPromoter');\r\nconst settingsDoc = doc(settingsCollection, 'general');\r\n\r\n// Функция для генерации URL аватара на основе имени\r\nconst generateAvatarUrl = (name) => {\r\n  // Используем сервис UI Avatars для генерации аватара по имени\r\n  const encodedName = encodeURIComponent(name);\r\n  return `https://ui-avatars.com/api/?name=${encodedName}&background=random&color=fff&size=128`;\r\n};\r\n\r\n// Получить всех промоутеров, отсортированных по количеству листовок (по убыванию)\r\nexport const getPromoters = async () => {\r\n  try {\r\n    const q = query(promotersCollection, orderBy('leafletsCount', 'desc'));\r\n    const querySnapshot = await getDocs(q);\r\n    \r\n    return querySnapshot.docs.map(doc => ({\r\n      id: doc.id,\r\n      ...doc.data()\r\n    }));\r\n  } catch (error) {\r\n    console.error('Ошибка при получении промоутеров:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Получить топ N промоутеров\r\nexport const getTopPromoters = async (topCount = 10) => {\r\n  try {\r\n    const q = query(\r\n      promotersCollection, \r\n      orderBy('leafletsCount', 'desc'), \r\n      limit(topCount)\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    \r\n    return querySnapshot.docs.map(doc => ({\r\n      id: doc.id,\r\n      ...doc.data()\r\n    }));\r\n  } catch (error) {\r\n    console.error('Ошибка при получении топ промоутеров:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Получить промоутера по ID\r\nexport const getPromoterById = async (id) => {\r\n  try {\r\n    const docRef = doc(db, 'promoters', id);\r\n    const docSnap = await getDoc(docRef);\r\n    \r\n    if (docSnap.exists()) {\r\n      return {\r\n        id: docSnap.id,\r\n        ...docSnap.data()\r\n      };\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error('Ошибка при получении промоутера:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Добавить нового промоутера\r\nexport const addPromoter = async (promoterData, avatarFile) => {\r\n  try {\r\n    // Вместо загрузки файла используем генерацию аватара по имени\r\n    // или URL, если он предоставлен в promoterData.avatarUrl\r\n    let avatarUrl = promoterData.avatarUrl || '';\r\n    \r\n    if (!avatarUrl && promoterData.name) {\r\n      avatarUrl = generateAvatarUrl(promoterData.name);\r\n    }\r\n    \r\n    // Создаем документ промоутера\r\n    const newPromoter = {\r\n      name: promoterData.name,\r\n      avatarUrl,\r\n      leafletsCount: Number(promoterData.leafletsCount) || 0,\r\n      workDays: Number(promoterData.workDays) || 0,\r\n      district: promoterData.district || '',\r\n      createdAt: serverTimestamp(),\r\n      updatedAt: serverTimestamp()\r\n    };\r\n    \r\n    // Рассчитываем скорость только если есть дни работы\r\n    if (newPromoter.workDays > 0) {\r\n      newPromoter.speed = Math.round(newPromoter.leafletsCount / newPromoter.workDays);\r\n    } else {\r\n      newPromoter.speed = 0;\r\n    }\r\n    \r\n    const docRef = await addDoc(promotersCollection, newPromoter);\r\n    return {\r\n      id: docRef.id,\r\n      ...newPromoter\r\n    };\r\n  } catch (error) {\r\n    console.error('Ошибка при добавлении промоутера:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Обновить данные промоутера\r\nexport const updatePromoter = async (id, data) => {\r\n  try {\r\n    const promoterRef = doc(db, 'promoters', id);\r\n    await updateDoc(promoterRef, {\r\n      ...data,\r\n      updatedAt: serverTimestamp()\r\n    });\r\n  } catch (error) {\r\n    console.error('Ошибка при обновлении промоутера:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Удалить промоутера\r\nexport const deletePromoter = async (id) => {\r\n  try {\r\n    const promoterRef = doc(db, 'promoters', id);\r\n    const promoterSnap = await getDoc(promoterRef);\r\n    \r\n    if (!promoterSnap.exists()) {\r\n      throw new Error('Промоутер не найден');\r\n    }\r\n    \r\n    // Удаляем документ\r\n    await deleteDoc(promoterRef);\r\n    \r\n    return id;\r\n  } catch (error) {\r\n    console.error('Ошибка при удалении промоутера:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Получить данные о лучшем промоутере месяца\r\nexport const getTopPromoter = async () => {\r\n  try {\r\n    const docSnap = await getDoc(topPromoterDoc);\r\n    \r\n    if (docSnap.exists()) {\r\n      return docSnap.data();\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error('Ошибка при получении лучшего промоутера:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Установить лучшего промоутера месяца\r\nexport const setTopPromoter = async (topPromoterData) => {\r\n  try {\r\n    // Если нет URL аватара, но есть имя, генерируем аватар\r\n    if (!topPromoterData.avatarUrl && topPromoterData.name) {\r\n      topPromoterData.avatarUrl = generateAvatarUrl(topPromoterData.name);\r\n    }\r\n    \r\n    await setDoc(topPromoterDoc, {\r\n      ...topPromoterData,\r\n      date: serverTimestamp()\r\n    });\r\n    \r\n    return topPromoterData;\r\n  } catch (error) {\r\n    console.error('Ошибка при установке лучшего промоутера:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Получить настройки сайта\r\nexport const getSettings = async () => {\r\n  try {\r\n    const docSnap = await getDoc(settingsDoc);\r\n    \r\n    if (docSnap.exists()) {\r\n      return docSnap.data();\r\n    } else {\r\n      // Создаем документ с настройками по умолчанию, если его нет\r\n      const defaultSettings = {\r\n        companyLogo: 'https://via.placeholder.com/200x60?text=Logo',\r\n        headerText: 'Конкурс для лучших! Стань топ-промоутером Петрозаводска!',\r\n        telegramChannel: '',\r\n        managerContacts: []\r\n      };\r\n      \r\n      await setDoc(settingsDoc, defaultSettings);\r\n      return defaultSettings;\r\n    }\r\n  } catch (error) {\r\n    console.error('Ошибка при получении настроек:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Обновить настройки сайта\r\nexport const updateSettings = async (settingsData, logoFile) => {\r\n  try {\r\n    // Используем URL логотипа из settingsData или оставляем текущий\r\n    const updatedSettings = {\r\n      ...settingsData\r\n    };\r\n    \r\n    await setDoc(settingsDoc, updatedSettings);\r\n    \r\n    return updatedSettings;\r\n  } catch (error) {\r\n    console.error('Ошибка при обновлении настроек:', error);\r\n    throw error;\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}