{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{signInWithEmailAndPassword,signOut,onAuthStateChanged,sendPasswordResetEmail}from'firebase/auth';import{auth}from'../firebase/config';import{toast}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export function useAuth(){return useContext(AuthContext);}export function AuthProvider(_ref){let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[loading,setLoading]=useState(true);// Функция для входа в систему\nasync function login(email,password){try{await signInWithEmailAndPassword(auth,email,password);toast.success('Вход выполнен успешно!');return true;}catch(error){console.error('Ошибка входа:',error);let errorMessage='Произошла ошибка при входе';if(error.code==='auth/user-not-found'||error.code==='auth/wrong-password'){errorMessage='Неверный email или пароль';}else if(error.code==='auth/too-many-requests'){errorMessage='Слишком много попыток входа. Попробуйте позже';}toast.error(errorMessage);return false;}}// Функция для выхода из системы\nasync function logout(){try{await signOut(auth);toast.success('Выход выполнен успешно');}catch(error){console.error('Ошибка выхода:',error);toast.error('Ошибка при выходе из системы');}}// Функция для сброса пароля\nasync function resetPassword(email){try{await sendPasswordResetEmail(auth,email);toast.success('Инструкции по сбросу пароля отправлены на ваш email');return true;}catch(error){console.error('Ошибка сброса пароля:',error);toast.error('Ошибка при отправке инструкций по сбросу пароля');return false;}}// Эффект для отслеживания состояния аутентификации\nuseEffect(()=>{const unsubscribe=onAuthStateChanged(auth,user=>{setCurrentUser(user);setLoading(false);});return unsubscribe;},[]);const value={currentUser,login,logout,resetPassword,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","signInWithEmailAndPassword","signOut","onAuthStateChanged","sendPasswordResetEmail","auth","toast","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","currentUser","setCurrentUser","loading","setLoading","login","email","password","success","error","console","errorMessage","code","logout","resetPassword","unsubscribe","user","value","Provider"],"sources":["D:/проекты/Promo rating/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { \r\n  signInWithEmailAndPassword, \r\n  signOut, \r\n  onAuthStateChanged,\r\n  sendPasswordResetEmail\r\n} from 'firebase/auth';\r\nimport { auth } from '../firebase/config';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Функция для входа в систему\r\n  async function login(email, password) {\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      toast.success('Вход выполнен успешно!');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Ошибка входа:', error);\r\n      let errorMessage = 'Произошла ошибка при входе';\r\n      \r\n      if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\r\n        errorMessage = 'Неверный email или пароль';\r\n      } else if (error.code === 'auth/too-many-requests') {\r\n        errorMessage = 'Слишком много попыток входа. Попробуйте позже';\r\n      }\r\n      \r\n      toast.error(errorMessage);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Функция для выхода из системы\r\n  async function logout() {\r\n    try {\r\n      await signOut(auth);\r\n      toast.success('Выход выполнен успешно');\r\n    } catch (error) {\r\n      console.error('Ошибка выхода:', error);\r\n      toast.error('Ошибка при выходе из системы');\r\n    }\r\n  }\r\n\r\n  // Функция для сброса пароля\r\n  async function resetPassword(email) {\r\n    try {\r\n      await sendPasswordResetEmail(auth, email);\r\n      toast.success('Инструкции по сбросу пароля отправлены на ваш email');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Ошибка сброса пароля:', error);\r\n      toast.error('Ошибка при отправке инструкций по сбросу пароля');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Эффект для отслеживания состояния аутентификации\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    logout,\r\n    resetPassword,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n} "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,OACEC,0BAA0B,CAC1BC,OAAO,CACPC,kBAAkB,CAClBC,sBAAsB,KACjB,eAAe,CACtB,OAASC,IAAI,KAAQ,oBAAoB,CACzC,OAASC,KAAK,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvC,KAAM,CAAAC,WAAW,cAAGZ,aAAa,CAAC,CAAC,CAEnC,MAAO,SAAS,CAAAa,OAAOA,CAAA,CAAG,CACxB,MAAO,CAAAZ,UAAU,CAACW,WAAW,CAAC,CAChC,CAEA,MAAO,SAAS,CAAAE,YAAYA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACiB,OAAO,CAAEC,UAAU,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAE5C;AACA,cAAe,CAAAmB,KAAKA,CAACC,KAAK,CAAEC,QAAQ,CAAE,CACpC,GAAI,CACF,KAAM,CAAAnB,0BAA0B,CAACI,IAAI,CAAEc,KAAK,CAAEC,QAAQ,CAAC,CACvDd,KAAK,CAACe,OAAO,CAAC,wBAAwB,CAAC,CACvC,MAAO,KAAI,CACb,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrC,GAAI,CAAAE,YAAY,CAAG,4BAA4B,CAE/C,GAAIF,KAAK,CAACG,IAAI,GAAK,qBAAqB,EAAIH,KAAK,CAACG,IAAI,GAAK,qBAAqB,CAAE,CAChFD,YAAY,CAAG,2BAA2B,CAC5C,CAAC,IAAM,IAAIF,KAAK,CAACG,IAAI,GAAK,wBAAwB,CAAE,CAClDD,YAAY,CAAG,+CAA+C,CAChE,CAEAlB,KAAK,CAACgB,KAAK,CAACE,YAAY,CAAC,CACzB,MAAO,MAAK,CACd,CACF,CAEA;AACA,cAAe,CAAAE,MAAMA,CAAA,CAAG,CACtB,GAAI,CACF,KAAM,CAAAxB,OAAO,CAACG,IAAI,CAAC,CACnBC,KAAK,CAACe,OAAO,CAAC,wBAAwB,CAAC,CACzC,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtChB,KAAK,CAACgB,KAAK,CAAC,8BAA8B,CAAC,CAC7C,CACF,CAEA;AACA,cAAe,CAAAK,aAAaA,CAACR,KAAK,CAAE,CAClC,GAAI,CACF,KAAM,CAAAf,sBAAsB,CAACC,IAAI,CAAEc,KAAK,CAAC,CACzCb,KAAK,CAACe,OAAO,CAAC,qDAAqD,CAAC,CACpE,MAAO,KAAI,CACb,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7ChB,KAAK,CAACgB,KAAK,CAAC,iDAAiD,CAAC,CAC9D,MAAO,MAAK,CACd,CACF,CAEA;AACAtB,SAAS,CAAC,IAAM,CACd,KAAM,CAAA4B,WAAW,CAAGzB,kBAAkB,CAACE,IAAI,CAAGwB,IAAI,EAAK,CACrDd,cAAc,CAACc,IAAI,CAAC,CACpBZ,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CAEF,MAAO,CAAAW,WAAW,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,KAAK,CAAG,CACZhB,WAAW,CACXI,KAAK,CACLQ,MAAM,CACNC,aAAa,CACbX,OACF,CAAC,CAED,mBACER,IAAA,CAACC,WAAW,CAACsB,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAjB,QAAA,CAChC,CAACG,OAAO,EAAIH,QAAQ,CACD,CAAC,CAE3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}