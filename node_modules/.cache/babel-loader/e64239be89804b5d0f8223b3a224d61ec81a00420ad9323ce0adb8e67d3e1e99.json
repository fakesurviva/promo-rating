{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\Promo rating\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { signInWithEmailAndPassword, signOut, onAuthStateChanged, sendPasswordResetEmail } from 'firebase/auth';\nimport { auth } from '../firebase/config';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Функция для входа в систему\n  async function login(email, password) {\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      toast.success('Вход выполнен успешно!');\n      return true;\n    } catch (error) {\n      console.error('Ошибка входа:', error);\n      let errorMessage = 'Произошла ошибка при входе';\n      if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\n        errorMessage = 'Неверный email или пароль';\n      } else if (error.code === 'auth/too-many-requests') {\n        errorMessage = 'Слишком много попыток входа. Попробуйте позже';\n      }\n      toast.error(errorMessage);\n      return false;\n    }\n  }\n\n  // Функция для выхода из системы\n  async function logout() {\n    try {\n      await signOut(auth);\n      toast.success('Выход выполнен успешно');\n    } catch (error) {\n      console.error('Ошибка выхода:', error);\n      toast.error('Ошибка при выходе из системы');\n    }\n  }\n\n  // Функция для сброса пароля\n  async function resetPassword(email) {\n    try {\n      await sendPasswordResetEmail(auth, email);\n      toast.success('Инструкции по сбросу пароля отправлены на ваш email');\n      return true;\n    } catch (error) {\n      console.error('Ошибка сброса пароля:', error);\n      toast.error('Ошибка при отправке инструкций по сбросу пароля');\n      return false;\n    }\n  }\n\n  // Эффект для отслеживания состояния аутентификации\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    login,\n    logout,\n    resetPassword,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","signInWithEmailAndPassword","signOut","onAuthStateChanged","sendPasswordResetEmail","auth","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","login","email","password","success","error","console","errorMessage","code","logout","resetPassword","unsubscribe","user","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/проекты/Promo rating/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { \r\n  signInWithEmailAndPassword, \r\n  signOut, \r\n  onAuthStateChanged,\r\n  sendPasswordResetEmail\r\n} from 'firebase/auth';\r\nimport { auth } from '../firebase/config';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Функция для входа в систему\r\n  async function login(email, password) {\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      toast.success('Вход выполнен успешно!');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Ошибка входа:', error);\r\n      let errorMessage = 'Произошла ошибка при входе';\r\n      \r\n      if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\r\n        errorMessage = 'Неверный email или пароль';\r\n      } else if (error.code === 'auth/too-many-requests') {\r\n        errorMessage = 'Слишком много попыток входа. Попробуйте позже';\r\n      }\r\n      \r\n      toast.error(errorMessage);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Функция для выхода из системы\r\n  async function logout() {\r\n    try {\r\n      await signOut(auth);\r\n      toast.success('Выход выполнен успешно');\r\n    } catch (error) {\r\n      console.error('Ошибка выхода:', error);\r\n      toast.error('Ошибка при выходе из системы');\r\n    }\r\n  }\r\n\r\n  // Функция для сброса пароля\r\n  async function resetPassword(email) {\r\n    try {\r\n      await sendPasswordResetEmail(auth, email);\r\n      toast.success('Инструкции по сбросу пароля отправлены на ваш email');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Ошибка сброса пароля:', error);\r\n      toast.error('Ошибка при отправке инструкций по сбросу пароля');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Эффект для отслеживания состояния аутентификации\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    logout,\r\n    resetPassword,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}